// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RhemaCMS.Models.CLNTModels;

namespace RhemaCMS.Migrations.ChurchModel
{
    [DbContext(typeof(ChurchModelContext))]
    [Migration("20210115033953_ef_c_upd20")]
    partial class ef_c_upd20
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.AccountPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int>("LengthInDays")
                        .HasColumnType("int");

                    b.Property<string>("LongevityStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("PeriodCode")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("PeriodDesc")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("PeriodIndex")
                        .HasColumnType("int");

                    b.Property<string>("PeriodStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("PeriodType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchPeriodId");

                    b.ToTable("AccountPeriod");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ActivityPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("From")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int>("LengthInDays")
                        .HasColumnType("int");

                    b.Property<int>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("PeriodDesc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PeriodType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("To")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ActivityPeriod");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.AppGlobalOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Allias")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ChurchLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ContactInfoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("GlobalChurchCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("MSTR_AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("Motto")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PrefixKey")
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<string>("RootChurchCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Slogan")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("TotalLevels")
                        .HasColumnType("int");

                    b.Property<string>("strFaithStream")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("strFaithTypeCategory")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ContactInfoId");

                    b.HasIndex("CtryAlpha3Code");

                    b.ToTable("AppGlobalOwner");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.AppUtilityNVP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("NVPCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("NVPCode")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("NVPStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("NVPSubCode")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("NVPValue")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<bool?>("RequireUserCustom")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("NVPCategoryId");

                    b.ToTable("AppUtilityNVP");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CertificateType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CertLevel")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.ToTable("CertificateType");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchBody", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<bool>("ApplyToClergyOnly")
                        .HasColumnType("bit");

                    b.Property<string>("BriefHistory")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ChurchCodeCustom")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ChurchLevelId")
                        .HasColumnType("int");

                    b.Property<string>("ChurchType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<double?>("ChurchUnitIndex")
                        .HasColumnType("float");

                    b.Property<string>("ChurchUnitLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChurchUnitMaxAge")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchUnitMinAge")
                        .HasColumnType("int");

                    b.Property<string>("ChurchWorkStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ContactInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryRegionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Formed")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenderStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("GlobalChurchCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("GradeLevel")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Innaug")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFullAutonomy")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUnitGenerational")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("MSTR_AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("MSTR_ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("MSTR_ChurchLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("MSTR_ParentChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("MaxNumAllowed")
                        .HasColumnType("int");

                    b.Property<int?>("MinNumAllowed")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OrganisationType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("OwnershipStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("ParentChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryFunction")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("RootChurchCode")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("SubscriptionKey")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("SupervisedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("TagName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchLevelId");

                    b.HasIndex("ContactInfoId");

                    b.HasIndex("CountryRegionId");

                    b.HasIndex("CtryAlpha3Code");

                    b.HasIndex("OwnedByChurchBodyId")
                        .IsUnique()
                        .HasFilter("[OwnedByChurchBodyId] IS NOT NULL");

                    b.ToTable("ChurchBody");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchBodyService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<bool>("IsTimed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<long>("MaxPersCapacity")
                        .HasColumnType("bigint");

                    b.Property<string>("MeetingDay")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ServiceEnd")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ServiceStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceType")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ServiceCategoryId");

                    b.ToTable("ChurchBodyService");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchCalendarEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyServiceId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchEventCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchLifeActivityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("EventFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EventTo")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsChurchServiceEvent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEventActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFullDay")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ThemeColor")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Venue")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchBodyServiceId");

                    b.HasIndex("ChurchEventCategoryId");

                    b.HasIndex("ChurchLifeActivityId");

                    b.ToTable("ChurchCalendarEvent");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchEventCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.ToTable("ChurchEventCategory");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CustomName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int>("LevelIndex")
                        .HasColumnType("int");

                    b.Property<int?>("MSTR_AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("MSTR_ChurchLevelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.ToTable("ChurchLevel");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchLifeActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsMainline")
                        .HasColumnType("bit");

                    b.Property<bool>("IsService")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.ToTable("ChurchLifeActivity");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchLifeActivityReqDef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchLifeActivityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ExpectedOccurences")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSequenced")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("RequirementDesc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchLifeActivityId");

                    b.ToTable("ChurchLifeActivityReqDef");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchMemStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbrev")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("Deceased")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.ToTable("ChurchMemStatus");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchMemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<bool>("ApplyToClergyOnly")
                        .HasColumnType("bit");

                    b.Property<int>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.ToTable("ChurchMemType");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ContactInfoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Hobbies")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Hometown")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("HometownRegionId")
                        .HasColumnType("int");

                    b.Property<int?>("IdTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("MaidenName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("MarriageRegNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MarriageType")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("MemberClass")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("MemberCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MemberCustomCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MemberGlobalId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("MemberTypeId")
                        .HasColumnType("int");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("MotherTongueId")
                        .HasColumnType("int");

                    b.Property<string>("National_IdNum")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("NationalityId")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("OtherInfo")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RootChurchCode")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("HometownRegionId");

                    b.HasIndex("IdTypeId");

                    b.HasIndex("MotherTongueId");

                    b.HasIndex("NationalityId");

                    b.ToTable("ChurchMember");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("From")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int>("LengthInDays")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("PeriodDesc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PeriodType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("To")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.ToTable("ChurchPeriod");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchRank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<bool>("ApplyToClergyOnly")
                        .HasColumnType("bit");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int>("RankIndex")
                        .HasColumnType("int");

                    b.Property<string>("RankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.ToTable("ChurchRank");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<bool>("ApplyToClergyOnly")
                        .HasColumnType("bit");

                    b.Property<string>("ChurchWorkStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("GlobalChurchCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("MaxNumAllowed")
                        .HasColumnType("int");

                    b.Property<int?>("MinNumAllowed")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OrganisationType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("OwnershipStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("ParentChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryFunction")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("RankIndex")
                        .HasColumnType("int");

                    b.Property<string>("RootChurchCode")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("TargetChurchLevelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.HasIndex("ParentChurchBodyId");

                    b.HasIndex("TargetChurchLevelId");

                    b.ToTable("ChurchRole");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchSector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("BriefHistory")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ChurchWorkStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ContactInfoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Formed")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenderStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("GlobalChurchCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("Innaug")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUnitGenerational")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<double?>("OrderIndex")
                        .HasColumnType("float");

                    b.Property<string>("OrganisationType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("OwnershipStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("ParentChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryFunction")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("RootChurchCode")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("TargetChurchLevelId")
                        .HasColumnType("int");

                    b.Property<string>("UnitLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UnitMaxAge")
                        .HasColumnType("int");

                    b.Property<int?>("UnitMinAge")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ContactInfoId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.HasIndex("ParentChurchBodyId");

                    b.HasIndex("TargetChurchLevelId");

                    b.ToTable("ChurchSectorUnit");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchVisitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AgeBracketId")
                        .HasColumnType("int");

                    b.Property<int>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchActivityId")
                        .HasColumnType("int");

                    b.Property<int>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchContactId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchVisitorTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Denomination")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DigitalAddress")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtConChurchContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtConChurchContactLocation")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ExtConChurchContactMobilePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtConChurchContactName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("FirstVisitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<bool?>("IsContactPersChurchFellow")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("MSTR_FaithTypeCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("MobilePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalityId")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("PrimaryLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("ResidenceAddress")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Vis_Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("VisitReason")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("AgeBracketId");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchActivityId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchContactId");

                    b.HasIndex("ChurchVisitorTypeId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("PrimaryLanguageId");

                    b.ToTable("ChurchVisitor");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchVisitorType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<bool>("ApplyToClergyOnly")
                        .HasColumnType("bit");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.ToTable("ChurchVisitorType");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<bool>("ChurchFellow")
                        .HasColumnType("bit");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactRef")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("DigitalAddress")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("MobilePhone1")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("MobilePhone2")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("PostalAddress")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<bool>("ResAddrSameAsPostAddr")
                        .HasColumnType("bit");

                    b.Property<string>("ResidenceAddress")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CtryAlpha3Code");

                    b.HasIndex("RegionId");

                    b.ToTable("ContactInfo");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.Country", b =>
                {
                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha2Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Curr3LISOSymbol")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CurrEngName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CurrLocName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CurrSymbol")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("EngName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.HasKey("CtryAlpha3Code");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CountryCustom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<bool>("IsChurchCountry")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefaultCountry")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisplay")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("CtryAlpha3Code");

                    b.ToTable("CountryCustom");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CountryRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("RegCode")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("CtryAlpha3Code");

                    b.ToTable("CountryRegion");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CountryRegionCustom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int>("CountryRegionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsChurchRegion")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefaultRegion")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisplay")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("CountryRegionId");

                    b.ToTable("CountryRegionCustom");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<decimal>("BaseRate")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CurrencyName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsBaseCurrency")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("SubAcronym")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("SubSymbol")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("CtryAlpha3Code");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CurrencyCustom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<decimal>("BaseRate")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<bool>("IsBaseCurrency")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChurchCountry")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefaultCountry")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisplay")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("CtryAlpha3Code");

                    b.ToTable("CurrencyCustom");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.EventActivityReqLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int>("ChurchCalendarId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchEventId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Completed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberChurchRoleId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequirementDefId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchEventId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("MemberChurchRoleId");

                    b.HasIndex("RequirementDefId");

                    b.ToTable("EventActivityReqLog");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.InstitutionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<decimal?>("EduLevelIndex")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.ToTable("InstitutionType");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.LanguageSpoken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("CtryAlpha3Code");

                    b.ToTable("LanguageSpoken");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.LanguageSpokenCustom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsChurchLanguage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefaultLanguage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisplay")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageSpokenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("LanguageSpokenId");

                    b.ToTable("LanguageSpokenCustom");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.LeaderRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AuthorityIndex")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("LeaderRoleCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<bool>("ScopeRestricted")
                        .HasColumnType("bit");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("LeaderRoleCategoryId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.ToTable("LeaderRole");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.LeaderRoleCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("EventRole")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChurchLeaderRole")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChurchWorkerRole")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClergyRole")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCoreRole")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLayRole")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOrdainedRole")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.ToTable("LeaderRoleCategory");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberChurchLife", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyServiceId")
                        .HasColumnType("int");

                    b.Property<int>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("DepartReason")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("Departed")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnrollReason")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsCurrentMember")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeceased")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMemBaptized")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMemCommunicant")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMemConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPioneer")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Joined")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("MemberLifeSummary")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("NonCommReason")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchBodyServiceId");

                    b.HasIndex("ChurchMemberId");

                    b.ToTable("MemberChurchLife");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberChurchLifeActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityVenue")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchLifeActivityId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("CongregationExt")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivity")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOfficiatedByChurchFellow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOfficiatedByExt")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberChurchRoleId")
                        .HasColumnType("int");

                    b.Property<string>("OfficiatedByCongExt")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OfficiatedByName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OfficiatedByNameExt")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OfficiatedByRole")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OfficiatedByRoleExt")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Venue")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("VenueChurchBodyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchLifeActivityId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("MemberChurchRoleId");

                    b.HasIndex("VenueChurchBodyId");

                    b.ToTable("MemberChurchLifeActivity");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberChurchRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("BatchCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchSectorUnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Commenced")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Completed")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompletionReason")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCoreRole")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCurrentRole")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRoleUnitChurchSector")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("LeaderRoleId")
                        .HasColumnType("int");

                    b.Property<string>("OrganisationType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("RoleProfile")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchBodyUnitId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("ChurchSectorUnitId");

                    b.HasIndex("LeaderRoleId");

                    b.ToTable("MemberChurchRole");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberChurchSector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchSectorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Departed")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCoreArea")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCurrSector")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCurrentMember")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPioneer")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Joined")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("ChurchSectorId");

                    b.ToTable("MemberChurchSector");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<string>("CityExtCon")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("ExtConContactName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ExtConDenomination")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ExtConDigitalAddress")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ExtConEmail")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ExtConFaithCategory")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ExtConLocation")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ExtConMobilePhone")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("ExtConPostalAddress")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ExtConRegionId")
                        .HasColumnType("int");

                    b.Property<bool>("ExtConResAddrSameAsPostAddr")
                        .HasColumnType("bit");

                    b.Property<string>("ExtConResidenceAddress")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("InternalContactId")
                        .HasColumnType("int");

                    b.Property<bool>("IsChurchFellow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCurrentContact")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("RelationshipId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("CtryAlpha3Code");

                    b.HasIndex("ExtConRegionId");

                    b.HasIndex("InternalContactId");

                    b.HasIndex("RelationshipId");

                    b.ToTable("MemberContact");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberEducHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("CertificateId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Discipline")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("InstitutionName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("InstitutionTypeId")
                        .HasColumnType("int")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Since")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Until")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("CertificateId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("CtryAlpha3Code");

                    b.HasIndex("InstitutionTypeId");

                    b.ToTable("MemberEducHistory");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberLanguageSpoken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPrimaryLanguage")
                        .HasColumnType("bit");

                    b.Property<int?>("LanguageSpokenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("ProficiencyLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("LanguageSpokenId");

                    b.ToTable("MemberLanguageSpoken");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberProfessionBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("BrandProfile")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActivePractice")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("Profession")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Since")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Until")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.ToTable("MemberProfessionBrand");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberRank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Assigned")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchRankId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCurrentRank")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Until")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("ChurchRankId");

                    b.ToTable("MemberRank");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("ChurchYear")
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("RegCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("ChurchPeriodId");

                    b.ToTable("MemberRegistration");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("ChurchFellow")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<string>("CityExtCon")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ContactNameExtCon")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3CodeExtCon")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("DenominationExtCon")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DigitalAddressExtCon")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("EmailExtCon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExternalNonMemAssociateId")
                        .HasColumnType("int");

                    b.Property<int?>("FaithTypeCategoryIdExtCon")
                        .HasColumnType("int");

                    b.Property<bool>("IsNextOfKin")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("LocationExtCon")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("MobilePhoneExtCon")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("PostalAddressExtCon")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("RegionIdExtCon")
                        .HasColumnType("int");

                    b.Property<int?>("RelationChurchMemberId")
                        .HasColumnType("int");

                    b.Property<string>("RelationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("RelationshipId")
                        .HasColumnType("int");

                    b.Property<bool>("ResAddrSameAsPostAddrExtCon")
                        .HasColumnType("bit");

                    b.Property<string>("ResidenceAddressExtCon")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("CtryAlpha3CodeExtCon");

                    b.HasIndex("RegionIdExtCon");

                    b.HasIndex("RelationChurchMemberId");

                    b.HasIndex("RelationshipId");

                    b.ToTable("MemberRelation");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Since")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Until")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemStatusId");

                    b.HasIndex("ChurchMemberId");

                    b.ToTable("MemberStatus");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Assigned")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Until")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemTypeId");

                    b.HasIndex("ChurchMemberId");

                    b.ToTable("MemberType");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberWorkExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Ended")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCurrentWork")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("Started")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("WorkRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.ToTable("MemberWorkExperience");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.National_IdType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("IdTypeDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("CtryAlpha3Code");

                    b.ToTable("National_IdType");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.RelationshipType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsChild")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSpouse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("RelationIndex")
                        .HasColumnType("int");

                    b.Property<int?>("RelationshipTypeFemalePairId")
                        .HasColumnType("int");

                    b.Property<int?>("RelationshipTypeGenericPairId")
                        .HasColumnType("int");

                    b.Property<int?>("RelationshipTypeMalePairId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.ToTable("RelationshipType");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.UserAuditTrail_CL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("AuditType")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("UI_Desc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserAuditTrail_CL");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.AccountPeriod", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchPeriod", "ChurchPeriod")
                        .WithMany()
                        .HasForeignKey("ChurchPeriodId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.AppGlobalOwner", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.ContactInfo", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("ContactInfoId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.AppUtilityNVP", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "NVPCategory")
                        .WithMany()
                        .HasForeignKey("NVPCategoryId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CertificateType", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchBody", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchLevel", "ChurchLevel")
                        .WithMany()
                        .HasForeignKey("ChurchLevelId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ContactInfo", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("ContactInfoId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.CountryRegion", "CountryRegion")
                        .WithMany()
                        .HasForeignKey("CountryRegionId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithOne("ParentChurchBody")
                        .HasForeignKey("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchBodyService", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBodyService", "ServiceCategory")
                        .WithMany()
                        .HasForeignKey("ServiceCategoryId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchCalendarEvent", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBodyService", "ChurchBodyService")
                        .WithMany()
                        .HasForeignKey("ChurchBodyServiceId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchEventCategory", "ChurchEventCategory")
                        .WithMany()
                        .HasForeignKey("ChurchEventCategoryId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchLifeActivity", "ChurchLifeActivity")
                        .WithMany()
                        .HasForeignKey("ChurchLifeActivityId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchEventCategory", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchLevel", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchLifeActivity", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchLifeActivityReqDef", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchLifeActivity", "ChurchLifeActivity")
                        .WithMany()
                        .HasForeignKey("ChurchLifeActivityId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchMemStatus", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchMemType", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchMember", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.CountryRegion", "HometownRegion")
                        .WithMany()
                        .HasForeignKey("HometownRegionId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.National_IdType", "IdType")
                        .WithMany()
                        .HasForeignKey("IdTypeId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.LanguageSpoken", "MotherTongue")
                        .WithMany()
                        .HasForeignKey("MotherTongueId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchPeriod", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchRank", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchRole", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ParentChurchBody")
                        .WithMany()
                        .HasForeignKey("ParentChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchLevel", "TargetChurchLevel")
                        .WithMany()
                        .HasForeignKey("TargetChurchLevelId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchSector", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ContactInfo", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("ContactInfoId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ParentChurchBody")
                        .WithMany()
                        .HasForeignKey("ParentChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchLevel", "TargetChurchLevel")
                        .WithMany()
                        .HasForeignKey("TargetChurchLevelId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchVisitor", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "AgeBracket")
                        .WithMany()
                        .HasForeignKey("AgeBracketId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchLifeActivity", "ChurchActivity")
                        .WithMany()
                        .HasForeignKey("ChurchActivityId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchContact")
                        .WithMany()
                        .HasForeignKey("ChurchContactId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchVisitorType", "ChurchVisitorType")
                        .WithMany()
                        .HasForeignKey("ChurchVisitorTypeId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.LanguageSpoken", "PrimaryLanguage")
                        .WithMany()
                        .HasForeignKey("PrimaryLanguageId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchVisitorType", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ContactInfo", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");

                    b.HasOne("RhemaCMS.Models.CLNTModels.CountryRegion", "CountryRegion")
                        .WithMany()
                        .HasForeignKey("RegionId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CountryCustom", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CountryRegion", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CountryRegionCustom", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.CountryRegion", "CountryRegion")
                        .WithMany()
                        .HasForeignKey("CountryRegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.Currency", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CurrencyCustom", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.EventActivityReqLog", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchCalendarEvent", "ChurchEvent")
                        .WithMany()
                        .HasForeignKey("ChurchEventId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.MemberChurchRole", "MemberChurchRole")
                        .WithMany()
                        .HasForeignKey("MemberChurchRoleId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchLifeActivityReqDef", "ActivityRequirementDef")
                        .WithMany()
                        .HasForeignKey("RequirementDefId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.InstitutionType", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.LanguageSpoken", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.LanguageSpokenCustom", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.LanguageSpoken", "LanguageSpoken")
                        .WithMany()
                        .HasForeignKey("LanguageSpokenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.LeaderRole", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RhemaCMS.Models.CLNTModels.LeaderRoleCategory", "LeaderRoleCategory")
                        .WithMany()
                        .HasForeignKey("LeaderRoleCategoryId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.LeaderRoleCategory", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberChurchLife", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBodyService", "ChurchBodyService")
                        .WithMany()
                        .HasForeignKey("ChurchBodyServiceId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberChurchLifeActivity", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchLifeActivity", "ChurchLifeActivity")
                        .WithMany()
                        .HasForeignKey("ChurchLifeActivityId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.MemberChurchRole", "MemberChurchRole")
                        .WithMany()
                        .HasForeignKey("MemberChurchRoleId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "VenueChurchBody")
                        .WithMany()
                        .HasForeignKey("VenueChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberChurchRole", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBodyUnit")
                        .WithMany()
                        .HasForeignKey("ChurchBodyUnitId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchSectorUnit")
                        .WithMany()
                        .HasForeignKey("ChurchSectorUnitId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.LeaderRole", "LeaderRole")
                        .WithMany()
                        .HasForeignKey("LeaderRoleId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberChurchSector", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchSector", "ChurchSector")
                        .WithMany()
                        .HasForeignKey("ChurchSectorId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberContact", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "ExtConCountry")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");

                    b.HasOne("RhemaCMS.Models.CLNTModels.CountryRegion", "ExtConRegion")
                        .WithMany()
                        .HasForeignKey("ExtConRegionId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "InternalContact")
                        .WithMany()
                        .HasForeignKey("InternalContactId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.RelationshipType", "RelationshipType")
                        .WithMany()
                        .HasForeignKey("RelationshipId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberEducHistory", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.CertificateType", "Certificate")
                        .WithMany()
                        .HasForeignKey("CertificateId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");

                    b.HasOne("RhemaCMS.Models.CLNTModels.InstitutionType", "InstitutionType")
                        .WithMany()
                        .HasForeignKey("InstitutionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberLanguageSpoken", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RhemaCMS.Models.CLNTModels.LanguageSpoken", "LanguageSpoken")
                        .WithMany()
                        .HasForeignKey("LanguageSpokenId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberProfessionBrand", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberRank", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchRank", "ChurchRank")
                        .WithMany("MemberRank")
                        .HasForeignKey("ChurchRankId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberRegistration", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RhemaCMS.Models.CLNTModels.ActivityPeriod", "ChurchPeriod")
                        .WithMany()
                        .HasForeignKey("ChurchPeriodId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberRelation", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "CountryExtCon")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3CodeExtCon");

                    b.HasOne("RhemaCMS.Models.CLNTModels.CountryRegion", "RegionExtCon")
                        .WithMany()
                        .HasForeignKey("RegionIdExtCon");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "RelationChurchMember")
                        .WithMany()
                        .HasForeignKey("RelationChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.RelationshipType", "Relationship")
                        .WithMany()
                        .HasForeignKey("RelationshipId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberStatus", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMemStatus", "ChurchMemStatus")
                        .WithMany()
                        .HasForeignKey("ChurchMemStatusId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberType", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMemType", "ChurchMemType")
                        .WithMany()
                        .HasForeignKey("ChurchMemTypeId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberWorkExperience", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.National_IdType", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.RelationshipType", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");
                });
#pragma warning restore 612, 618
        }
    }
}
