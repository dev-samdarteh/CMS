// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RhemaCMS.Models.CLNTModels;

namespace RhemaCMS.Migrations.ChurchModel
{
    [DbContext(typeof(ChurchModelContext))]
    [Migration("20201208051648_ef_c_init")]
    partial class ef_c_init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.AccountPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int>("LengthInDays")
                        .HasColumnType("int");

                    b.Property<string>("LongevityStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("PeriodCode")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("PeriodDesc")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("PeriodIndex")
                        .HasColumnType("int");

                    b.Property<string>("PeriodStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("PeriodType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchPeriodId");

                    b.ToTable("AccountPeriod");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.AppGlobalOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Allias")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ChurchLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ContactInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("FaithTypeCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalChurchCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("MSTR_AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("Motto")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PrefixKey")
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<string>("RootChurchCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Slogan")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("TotalLevels")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContactInfoId");

                    b.HasIndex("CountryId");

                    b.ToTable("AppGlobalOwner");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.AppUtilityNVP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("NVPCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("NVPCode")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("NVPStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("NVPTag")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("NVPValue")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<bool?>("RequireUserCustom")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("NVPCategoryId");

                    b.ToTable("AppUtilityNVP");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CertificateType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CertLevel")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.ToTable("CertificateType");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchBody", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<bool>("ApplyToClergyOnly")
                        .HasColumnType("bit");

                    b.Property<string>("BriefHistory")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ChurchCodeCustom")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ChurchLevelId")
                        .HasColumnType("int");

                    b.Property<string>("ChurchType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<double?>("ChurchUnitIndex")
                        .HasColumnType("float");

                    b.Property<string>("ChurchUnitLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChurchUnitMaxAge")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchUnitMinAge")
                        .HasColumnType("int");

                    b.Property<string>("ChurchWorkStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ContactInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryRegionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Formed")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenderStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("GlobalChurchCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("GradeLevel")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Innaug")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFullAutonomy")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUnitGenerational")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("MSTR_AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("MSTR_ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("MSTR_ChurchLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("MSTR_ParentChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("MaxNumAllowed")
                        .HasColumnType("int");

                    b.Property<int?>("MinNumAllowed")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OrganisationType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("OwnershipStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("ParentChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryFunction")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("RootChurchCode")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("SubscriptionKey")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("SupervisedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("TagName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchLevelId");

                    b.HasIndex("ContactInfoId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CountryRegionId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.HasIndex("ParentChurchBodyId");

                    b.ToTable("ChurchBody");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CustomName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int>("LevelIndex")
                        .HasColumnType("int");

                    b.Property<int?>("MSTR_AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("MSTR_ChurchLevelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.ToTable("ChurchLevel");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ContactInfoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Hobbies")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Hometown")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("HometownRegionId")
                        .HasColumnType("int");

                    b.Property<int?>("IdTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("MaidenName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("MarriageRegNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MarriageType")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("MemberClass")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("MemberCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MemberCustomCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MemberGlobalId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("MemberTypeId")
                        .HasColumnType("int");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("MotherTongueId")
                        .HasColumnType("int");

                    b.Property<string>("National_IdNum")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("OtherInfo")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RootChurchCode")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("HometownRegionId");

                    b.HasIndex("IdTypeId");

                    b.HasIndex("MotherTongueId");

                    b.HasIndex("NationalityId");

                    b.ToTable("ChurchMember");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("From")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int>("LengthInDays")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("PeriodDesc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PeriodType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("To")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.ToTable("ChurchPeriod");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<bool>("IsChurchCountry")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefaultCountry")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisplay")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CountryRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("RegCode")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("CountryId");

                    b.ToTable("CountryRegion");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<decimal>("BaseRate")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsBaseCurrency")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("SubAcronym")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("SubSymbol")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("CountryId");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.InstitutionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<decimal?>("EduLevelIndex")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.ToTable("InstitutionType");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.LanguageSpoken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("CountryId");

                    b.ToTable("LanguageSpoken");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.National_IdType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("IdTypeDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("CountryId");

                    b.ToTable("National_IdType");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.RelationshipType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsChild")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSpouse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("RelationIndex")
                        .HasColumnType("int");

                    b.Property<int?>("RelationshipTypeFemalePairId")
                        .HasColumnType("int");

                    b.Property<int?>("RelationshipTypeGenericPairId")
                        .HasColumnType("int");

                    b.Property<int?>("RelationshipTypeMalePairId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.ToTable("RelationshipType");
                });

            modelBuilder.Entity("RhemaCMS.Models.ContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<bool>("ChurchFellow")
                        .HasColumnType("bit");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ContactRef")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("DigitalAddress")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("MobilePhone1")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("MobilePhone2")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("PostalAddress")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<bool>("ResAddrSameAsPostAddr")
                        .HasColumnType("bit");

                    b.Property<string>("ResidenceAddress")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("CountryId");

                    b.HasIndex("RegionId");

                    b.ToTable("ContactInfo");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.AccountPeriod", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchPeriod", "ChurchPeriod")
                        .WithMany()
                        .HasForeignKey("ChurchPeriodId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.AppGlobalOwner", b =>
                {
                    b.HasOne("RhemaCMS.Models.ContactInfo", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("ContactInfoId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.AppUtilityNVP", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "NVPCategory")
                        .WithMany()
                        .HasForeignKey("NVPCategoryId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CertificateType", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchBody", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchLevel", "ChurchLevel")
                        .WithMany()
                        .HasForeignKey("ChurchLevelId");

                    b.HasOne("RhemaCMS.Models.ContactInfo", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("ContactInfoId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.CountryRegion", "CountryRegion")
                        .WithMany()
                        .HasForeignKey("CountryRegionId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ParentChurchBody")
                        .WithMany()
                        .HasForeignKey("ParentChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchLevel", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchMember", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.CountryRegion", "HometownRegion")
                        .WithMany()
                        .HasForeignKey("HometownRegionId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.National_IdType", "IdType")
                        .WithMany()
                        .HasForeignKey("IdTypeId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.LanguageSpoken", "MotherTongue")
                        .WithMany()
                        .HasForeignKey("MotherTongueId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchPeriod", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.Country", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CountryRegion", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.Currency", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.InstitutionType", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.LanguageSpoken", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.National_IdType", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.RelationshipType", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.ContactInfo", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.CountryRegion", "CountryRegion")
                        .WithMany()
                        .HasForeignKey("RegionId");
                });
#pragma warning restore 612, 618
        }
    }
}
